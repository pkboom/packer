---
- name: Set up application
  hosts: all
  vars:
    - domain: experiment.com
    - repo: git@github.com:pkboom/experiment.git
    - db_name: experiment
    - db_user: admin
    - db_password: asdfasdf
    - deploy_password: asdfasdf
    - php_version: 8.2

  tasks:
    - name: Create deploy user
      become: yes
      user:
        name: deploy
        group: www-data
        groups: sudo
        append: true
        shell: /bin/bash

    - name: Add deploy user to the sudoers
      become: true
      copy:
        dest: "/etc/sudoers.d/deploy"
        content: "deploy ALL=(ALL) NOPASSWD: ALL"

    - name: Add deployer to authorized_key
      become: true
      authorized_key:
        user: deploy
        state: present
        key: "{{ lookup('file', '~/.ssh/deploy.pub') }}"
      notify:
        - restart ssh

    - name: creating db
      become: true
      mysql_db:
        name: "{{ db_name }}"
        state: present

    - name: Pause to let sshd restart
      pause:
        seconds: 30

    - name: Copy deploy private to server
      remote_user: deploy
      copy:
        src: ~/.ssh/deploy
        dest: ~/.ssh/id_ed25519
        mode: 0600

    - name: Copy deploy public to server
      remote_user: deploy
      copy:
        src: ~/.ssh/deploy.pub
        dest: ~/.ssh/id_ed25519.pub
        mode: 0644

    - name: Add github to known_hosts
      remote_user: deploy
      shell: |
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Delete existing project
      become: true
      command: rm -rf /var/www

    - name: Change ownership and permission of www
      become: true
      file:
        path: /var/www
        state: directory
        owner: deploy
        group: www-data
        mode: u=rwX,g=rwX,o=rX

    - name: Clone
      remote_user: deploy
      command: git clone --depth 1 {{ repo }} {{ domain }}
      args:
        chdir: /var/www

    - name: Recursively change ownership of directoris and files
      become: true
      file:
        path: /var/www/{{ domain }}
        state: directory
        recurse: yes
        owner: deploy
        group: www-data
        mode: u=rwX,g=rwX,o=rX

    - name: Create .env
      remote_user: deploy
      shell: cp '.env.example' '.env'
      args:
        chdir: /var/www/{{ domain }}

    - name: Configure DB
      remote_user: deploy
      lineinfile:
        dest: "/var/www/{{ domain }}/.env"
        state: "present"
        regexp: "^{{ item.name }}"
        line: "{{ item.name }}={{ item.value }}"
      loop:
        - { name: "DB_DATABASE", value: "{{ db_name }}" }
        - { name: "DB_USERNAME", value: "{{ db_user }}" }
        - { name: "DB_PASSWORD", value: "{{ db_password }}" }

    - name: Install nodejs
      become: true
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_19.x | sudo -E bash -
        sudo apt-get install -y nodejs

    - name: Install packages
      remote_user: deploy
      shell: |
        composer install
        php artisan key:generate
        npm install
        npm run build
      args:
        chdir: /var/www/{{ domain }}
      register: output

    - debug:
        var: output.stdout_lines

    - name: Migrate
      remote_user: deploy
      command: php artisan migrate
      args:
        chdir: "/var/www/{{ domain }}"

  handlers:
    - name: restart ssh
      service:
        name: ssh
        state: restarted

    - name: restart mysql
      service:
        name: mysql
        state: restarted
